@model ZOI.BAL.ViewModels.EmployeeViewModel
@using ZOI.BAL.Utilites
@{
    if (Model.employee.ID == 0)
    {
        ViewData["Title"] = "Add Employee";
    }
    else
    {
        ViewData["Title"] = "Update Employee";
    }
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("SummaryView");
}

<form>
    <div id="div_form" class="container-fluid" style="display: none;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                    <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.FName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.FName, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphaNumeric(event)" })
                                @Html.ValidationMessageFor(e => e.employee.FName)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.MName)
                                @Html.TextBoxFor(e => e.employee.MName, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphaNumeric(event)" })
                                @Html.ValidationMessageFor(e => e.employee.MName)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.LName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.LName, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphaNumeric(event)" })
                                @Html.ValidationMessageFor(e => e.employee.LName)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.EmployeeCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @if (Model.employee.ID != 0)
                                {
                                    @Html.TextBoxFor(e => e.employee.EmployeeCode, htmlAttributes: new { @class = "form-control", @id = "txt_name", @readonly = true })
                                }
                                else
                                {
                                    @Html.TextBoxFor(e => e.employee.EmployeeCode, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphaNumeric(event)", @id = "txt_name" })
                                }
                                @Html.HiddenFor(e => e.employee.ID, htmlAttributes: new { @id = "hdn_id" })

                                @Html.ValidationMessageFor(e => e.employee.EmployeeCode)
                                <span class="txt_name" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.Email)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.Email, htmlAttributes: new { @class = "form-control" })

                                @Html.ValidationMessageFor(e => e.employee.Email)

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.MobileNo)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.MobileNo, htmlAttributes: new { @class = "form-control", @onkeypress = "Numeric(event)" })
                                @Html.ValidationMessageFor(e => e.employee.MobileNo, "", new { @style = "margin-top: -10px !important;" })
                            </div>
                        </div>


                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.DepartmentID)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.DepartmentID, Model.DepartmentList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_department", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.DepartmentID, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.SubDepartmentID)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.SubDepartmentID, Model.SubDepartmentList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_subdepartment", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.SubDepartmentID, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.ReportingTo)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.ReportingTo, Model.ReportingTo ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_reportingto", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.ReportingTo, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.RoleId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.RoleId, Model.Role ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_role", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.RoleId, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.DesignationId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.DesignationId, Model.DesignationList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_deignation", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.DesignationId, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.Gender)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.employee.Gender, Model.Gender ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_gender", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.employee.Gender, "", new { @style = "margin-top: -5px !important;" })
                            </div>
                        </div>  
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.PAN)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.PAN, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.employee.PAN)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.DOB)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.employee.DOB, "{0:MM/dd/yyyy}", htmlAttributes: new { placeholder = "mm/dd/yyyy", @class = "date form-control" })
                                @Html.ValidationMessageFor(e => e.employee.DOB)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.employee.CertificationNo)
                                @Html.TextBoxFor(e => e.employee.CertificationNo, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphaNumeric(event)" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label style="font-size:18px !important">
                                        @Html.LabelFor(e => e.employee.IsActive, "Is Active")
                                        @Html.CheckBoxFor(e => e.employee.IsActive, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="text-center" style="margin:10px;">
                            @if (Model.employee.ID != 0)
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="btn_reset">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section scripts{
    <script>
        var valid = true;
        $(document).ready(function () {
            var option = "<option value=''>--Select--</option>";

            $(".chart-loader").attr("style", "display:none");
           // $("#div_form").show();
            $(".select2-container--material").select2({
                theme: "material",
            });

            $("#ddl_department").on("change", function () {
                getAjax("@Url.Action("GetSubDeptList")", { DeptID: $(this).val() }, function (result) {
                    console.log(result);
                    $.each(result, function (index, val) {
                        console.log(val.value);
                        console.log(val.text);
                        option += "<option value='" + val.value + "'>" + val.text + " </option>"
                    });
                    $("#ddl_subdepartment").empty().append(option);

                }, function () {})
            })
            $("#div_form").show();
            $(".date").datepicker({
                changeMonth: true,
                changeYear: true,
                minDate: '-70Y',
                maxDate: '-18Y',
                yearRange: "-70:-18",

                format: 'MM/dd/yyyy',

            });
            $(".date").val("");


            $("#btn_reset").click(function () {
                $("#div_form").trigger("reset");
            });
        });

        $("#txt_name").on("change", function () {
            getAjax("@Url.Action("IsExstis")", { name: $("#txt_name").val()}, function (result) {
                switch (result.status) {
                    case "F":
                        $(".txt_name").empty().text("The Employee Code already exsits.");
                        $(".txt_name").show();
                        valid = false;
                        break;
                    case "S":
                        $(".hdn_idname").text = $(".txt_name").text;
                        $(".txt_name").hide();
                        valid = true;
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
        });

        function SaveData() {
            var form_valid = $("form").valid();
            if (form_valid && valid) {

                    $(".chart-loader").show();
                    $("#div_form").hide();

                    var object = $("form").serializeArray();
                    var json = {};
                    $.each(object, function () {
                        if (json[this.name] == undefined) {
                            json[this.name] = this.value;
                        }
                    });
                    getAjax("@Url.Action("AddUpdate")", json,
                        function (result) {
                    switch (result.status) {
                        case "F":
                            $("#notification").empty().text(result.message);
                            $("#notification_modal").modal("show").on(alignModal);
                            setTimeout(function () {
                                $('#notification_modal').slideUp("slow").modal("hide");
                            }, 3000);
                            Message = null;
                            $(".chart-loader").hide();
                            $("#div_form").show();
                            break;
                        case "S":
                            window.localStorage.setItem("Message", result.message);
                            window.location.href = "@Url.Action("SummaryView")"
                            break;
                        default:
                    }
                }, function (request, error) {
                            alert(" Can't do because: " + error);
                    })
                }
        }


     


    </script>
}