@model ZOI.BAL.ViewModels.CompanyViewModel
@using ZOI.BAL.Utilites
@{
    if (Model.CompanyMaster.ID != 0)
    {
        ViewData["Title"] = "Update Company Master";
    }

    ViewData["Title"] = "Add Company Master";
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("SummaryView");
}

<form>
    <div id="div_form" class="container-fluid" style="display: none;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                            <div class="form-group text-center is-empty">
                                @if (Model.CompanyMaster.Icon == null)
                                {
                                    <img src="~/Material Design/images/user_avatar.png" class="img-show" alt="" id="company_icon" style="height:150px;width:150px;margin-top:0px" />
                                }
                                else
                                {
                                    <img src="~/Uploaded_Image/@Model.CompanyMaster.Icon" class="img-show " alt="" id="company_icon" style="height:150px;width:150px;margin-top:0px" />
                                }

                                @Html.HiddenFor(e => e.CompanyMaster.Icon, new { @id = "hdn_icon" })
                                <input type="file" id="file_logo" asp-for="@Model.CompanyMaster.Icon" class="fileUpload" style="display:none" />
                                <br />
                                @Html.ValidationMessageFor(e => e.CompanyMaster.Icon)
                                <span id="val_file_logo" class="text-center" style="color:red" hidden="hidden"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.NameOfCompany)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.NameOfCompany, htmlAttributes: new { @class = "form-control", @id = "txt_company_name", @onclick = "AllowAlpha()" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.NameOfCompany)
                                @Html.HiddenFor(e => e.CompanyMaster.ID, htmlAttributes: new { @id = "hdn_id", @class = "form-control" })
                                <span class="txt_company_name field-validation-error" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.IconName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.IconName, htmlAttributes: new { @id = "txt_icon_name", @class = "form-control", @placeholder = "" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.IconName)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.CompanyCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.CompanyCode, htmlAttributes: new { @class = "form-control", @id = "txt_company_code", @onclick = "AllowAlphaNumeric()", @readonly = true })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.CompanyCode)
                                <span class="txt_company_code field-validation-error" style="color:red"></span>
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.ContactPersonName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.ContactPersonName, htmlAttributes: new { @id = "txt_contact_person_name", @onclick = "AlphaNumericWithSpace()", @class = "form-control", @placeholder = "" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.ContactPersonName)
                                <span class="txt_contect_person_name field-validation-error" style="color:red"></span>
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.ContactPersonEmail)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.ContactPersonEmail, htmlAttributes: new { @class = "form-control", @id = "txt_person_email", @onclick = "AllowAlphaNumeric()" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.ContactPersonEmail)
                                <span class="txt_person_email field-validation-error" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.ContactPersonMobile)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.ContactPersonMobile, htmlAttributes: new { @class = "form-control", @onclick = "Numeric()" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.ContactPersonMobile)
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.AddressLine1)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextAreaFor(e => e.CompanyMaster.AddressLine1, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.AddressLine1)
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.AddressLine2)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextAreaFor(e => e.CompanyMaster.AddressLine2, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.AddressLine2)
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.AddressLine3)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextAreaFor(e => e.CompanyMaster.AddressLine3, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.AddressLine3)
                            </div>
                        </div>

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.CompanyMaster.CountryID)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.CompanyMaster.CountryID, Model.CountryList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_country", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.CompanyMaster.CountryID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">

                                @Html.DisplayNameFor(e => e.CompanyMaster.StateID)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.CompanyMaster.StateID, Model.StateList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_state", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.CompanyMaster.StateID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">

                                @Html.DisplayNameFor(e => e.CompanyMaster.CityID)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.CompanyMaster.CityID, Model.CityList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_city", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.CompanyMaster.CityID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">

                                @Html.DisplayNameFor(e => e.CompanyMaster.PinCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.CompanyMaster.PinCode, htmlAttributes: new { @class = "form-control", @placeholder = "eg. 123456", @onclick = "Numeric()" })
                                @Html.ValidationMessageFor(e => e.CompanyMaster.PinCode)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label>

                                        @Html.DisplayNameFor(e => e.CompanyMaster.IsActive)<span style="color: red"><strong>&nbsp;*</strong></span>
                                        @Html.CheckBoxFor(e => e.CompanyMaster.IsActive, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-center" style="margin:10px;">
                            @if (Model.CompanyMaster.ID != 0)
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="" onclick="Reset()">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts{

    <script>
        var valid = true;
        var option = "<option value=''>--Select--</option>";
        $(document).ready(function () {

            $(".chart-loader").attr("style", "display:none");
            $("#div_form").show();
                getAjax("@Url.Action("GetCompanyCode")", {}, function (result) {
                    $("#txt_company_code").val(result+'COMP');
                }, function () {})
        });

        // Fill state dropdown
            $("#ddl_country").on("change", function () {
                getAjax("@Url.Action("GetStateList")", { CountryID: $(this).val() }, function (result) {
                    $("#ddl_city").empty().append(option);
                    $.each(result, function (index, val) {
                        option += "<option value='" + val.value + "'>" + val.text + " </option>"
                    });
                    $("#ddl_state").empty().append(option);
                    option = "<option value=''>--Select--</option>";

                }, function () {})
            })

        // Fill City dropdown
            $("#ddl_state").on("change", function () {
                getAjax("@Url.Action("GetCityList")", { StateID: $(this).val() }, function (response) {
                    $.each(response, function (index, data) {
                        option += "<option value='" + data.value + "'>" + data.text +" </option>"
                            });
                    $("#ddl_city").empty().append(option);
                    option = "<option value=''>--Select--</option>";
                }, function () {})
            })


        // Check the duplicate name value on chang.
        $("#txt_company_name").on("change", function () {
                getAjax("@Url.Action("IsExstis")", { name: $("#txt_company_name").val(), ID: $("#hdn_id").val() }, function (result) {
                    switch (result.status) {
                        case "S":
                            $(".txt_company_name").hide();
                            valid = true;
                            break;
                        case "F":
                            $(".txt_company_name").empty().text("The Name was already exsits.");
                            $(".txt_company_name").show();
                            valid = false;
                            break;

                        default:
                    }
                }, function (request, error) {
                    alert(" Can't do because: " + error);
                })
            });

        // Save data function.
        function SaveData() {
            // If the form was valid and the Fields was Unique it move to the  add  functionality
            if ($("form").valid() && valid) {
                $("#div_form").css("filter", "opacity(30%)")
                $(".chart-loader").show();
                var file = $("#file_logo").get(0).files;
                var data = new FormData;
                data.append("IconFile", file[0]);
                data.append("Icon", $("#hdn_icon").val());
                data.append("ID", $("#hdn_id").val());
                $.ajax({
                    type: "post",
                    url: "@Url.Action("UploadIcon")",
                    data: data,
                    dataType: "JSON",
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result.status == "S") {
                            $("#hdn_icon").val(result.data);
                            debugger;
                            var object = $("form").serializeArray();
                            var json = {};
                            $.each(object, function () {
                                if (json[this.name] == undefined) {
                                    json[this.name] = this.value;
                                }
                            });
                            console.log(json);
                            postAjax("@Url.Action("AddUpdate")", json,
                                function (result) {
                                    switch (result.status) {
                                        case "S":
                                            window.localStorage.setItem("Message", result.message);
                                            window.location.href = "@Url.Action("SummaryView")"
                                        case "F":
                                            $("#notification").text(result.message);
                                            $("#notification").removeClass().addClass("alert alert-success").show();
                                            setTimeout(function () {
                                                $('#notification').slideUp("slow");
                                            }, 3000);
                                    }
                                },
                                function (request, error) {
                                    //alert(" Can't do because: " + error);
                                });
                        }
                        else {
                            show_notification(result.message);
                        }
                    },
                    error: function (error) {
                        show_notification("Something went wrong");
                    }
                });
            }
        }

        //Trigger the file upload.
        $("#company_icon").click(function () {
            $(".fileUpload").click();
        });

        // Upload the file and show
        $('.fileUpload').change(function () {
            var $this = $(this);
            var file = this.files[0];
            var fileType = file["type"];
            var validImageTypes = ["image/png"];
            var check = $.inArray(fileType, validImageTypes);
            if ($.inArray(fileType, validImageTypes) == 0) {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var image = new Image();
                        image.src = e.target.result;
                        image.onload = function () {
                            var height = this.height;
                            var width = this.width;
                            if (height == 512 || width == 512) {
                                $("#company_icon").show().attr('src', e.target.result);
                                $("#val_file_logo").text("").hide();
                                return true;
                            } else {
                                $("#val_file_logo").text("Height and Width must be in 512px.").show();
                                $('.fileUpload').val("");
                                return false;
                            }
                        };
                    }
                    reader.readAsDataURL(this.files[0]);
                } else {
                    $("#val_file_logo").text("Please select the PNG valid image.").show();
                    $('.fileUpload').val("");
                }
            }
            else {
                $("#val_file_logo").text("Please select the PNG valid image.").show();
                $('.fileUpload').val("");
            }
        });

    </script>
}



