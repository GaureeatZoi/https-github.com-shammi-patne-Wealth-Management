@model ZOI.BAL.ViewModels.RoleViewModel
@using ZOI.BAL.Utilites
@{
    if (Model.role.RoleID == 0)
    {
        ViewData["Title"] = "Add Role";
    }
    else
    {
        ViewData["Title"] = "Update Role";
    }
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("SummaryView");
}

<form>
    <div id="div_form" class="container-fluid" style="display: none;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                    <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.role.Name)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @if (Model.role.RoleID != 0)
                                {
                                    @Html.TextBoxFor(e => e.role.Name, htmlAttributes: new { @class = "form-control", @id = "txt_Role", @readonly = true })
                                }
                                else
                                {
                                    @Html.TextBoxFor(e => e.role.Name, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphabetsWithSpace(event)", @id = "txt_Role" })
                                }
                                @Html.HiddenFor(e => e.role.RoleID, htmlAttributes: new { @id = "hdn_id" })

                                @Html.ValidationMessageFor(e => e.role.Name, "", new { @class = "field-validation-error" })
                                <span class="text-Role" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.role.NormalizedName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.role.NormalizedName, htmlAttributes: new { @class = "form-control", @onkeypress = "AlphabetsWithSpace(event)" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.role.NormalizedName, "", new { @style = "margin-top: -35px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                <div class="form-group is-empty">
                                    @Html.DisplayNameFor(e => e.role.ParentRoleId)
                                    @Html.DropDownListFor(e => e.role.ParentRoleId, Model.RoleList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_prntrolelst", @class = "form-control select2-container--material", @style = "width: 100%" })
                                    <br style="line-height:1em" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="input-group">
                                
                                <label style="font-size:14px !important">
                                    @Html.DisplayNameFor(e => e.role.ApplicationId)
                                    @Html.DropDownListFor(e => e.role.ApplicationId, Model.ApplicationList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddlApplist", @class = "form-control select2-container--material", @style = "width: 100%" })
                                    <br style="line-height:1em" />
                                    @Html.ValidationMessageFor(e => e.role.ApplicationId, "", new { @style = "margin-top: -35px !important;" })
                                </label>
                                
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label style="font-size:14px !important">
                                        @Html.DisplayNameFor(e => e.role.IsActive)
                                        @Html.CheckBoxFor(e => e.role.IsActive, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-center" style="margin:10px;">
                            @if (Model.role.RoleID != 0)
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="btn_reset">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section scripts{
    <script>
        var valid = true;
        $(document).ready(function () {
            var option = "<option value=''>--Select--</option>";
            $(".chart-loader").attr("style", "display:none");
            $(".select2-container--material").select2({
                theme: "material",
            });
            $("#div_form").show();
            $("#btn_reset").click(function () {
                $("#div_form").trigger("reset");
            });
        });

         $("#txt_Role").on("change", function () {
             getAjax("@Url.Action("IsExstis")", { name: $("#txt_Role").val()}, function (result) {
                switch (result.status) {
                    case "F":
                        $(".text-Role").empty().text("The Role already exsits.");
                        $(".text-Role").show();
                        valid = false;
                        break;
                    case "S":
                        $(".hdn_idname").text = $(".txt_Role").text;
                        $(".text-Role").hide();
                        valid = true;
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
        });


        function SaveData() {          
            var form_valid = $("form").valid();
            if (form_valid && valid) {
                
                    $(".chart-loader").show();
                    $("#div_form").hide();

                    var object = $("form").serializeArray();
                    var json = {};
                    $.each(object, function () {
                        if (json[this.name] == undefined) {
                            json[this.name] = this.value;
                        }
                    });
                    getAjax("@Url.Action("AddUpdate")", json,
                        function (result) {
                    switch (result.status) {
                        case "F":
                            $("#notification").empty().text(result.message);
                            $("#notification_modal").modal("show").on(alignModal);
                            setTimeout(function () {
                                $('#notification_modal').slideUp("slow").modal("hide");
                            }, 3000);
                            Message = null;
                            $(".chart-loader").hide();
                            $("#div_form").show();
                            break;
                        case "S":
                            window.localStorage.setItem("Message", result.message);
                            window.location.href = "@Url.Action("SummaryView")"
                            break;
                        default:
                    }
                }, function (request, error) {
                            alert(" Can't do because: " + error);
                    })
                }
        }

    </script>
}