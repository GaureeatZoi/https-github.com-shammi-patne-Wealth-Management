@model ZOI.BAL.ViewModels.StateViewModel
@{
    @if (Model.state.Id != 0)
    {
        ViewData["Title"] = "Update State";
    }
    else
    {
        ViewData["Title"] = "Add State";
    }
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("SummaryView");
}

<form>
    <div id="div_form" class="container-fluid" style="display: none;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                    <div class="row">
                        @*<div class="text-danger" asp-validation-summary="ModelOnly"></div>*@
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.state.StateName)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @if (Model.state.Id != 0)
                                {
                                    @Html.TextBoxFor(e => e.state.StateName, htmlAttributes: new { @class = "form-control", @id = "txt_name", @readonly = true })
                                    @Html.HiddenFor(e => e.state.Id)
                                    

                                }
                                else
                                {
                                    @Html.TextBoxFor(e => e.state.StateName, htmlAttributes: new { @class = "form-control", @onkeypress = "AllowAlpha()", @id = "txt_name" })
                                }
                                @Html.ValidationMessageFor(e => e.state.StateName, "", new { @class = "field-validation-error" })
                                <span class="txt_name field-validation-error" style="color:red"></span>

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.state.CountryId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                <br style="line-height:1em" />
                                @Html.DropDownListFor(e => e.state.CountryId, Model.CountryList, "--Select--", new { @class = "form-control select2-container--material", @data_live_search = "true", @id = "ddl_countries" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.state.CountryId, "", new { @class = "field-validation-error" })

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.state.StateCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                <br style="line-height:1em" />
                                @Html.TextBoxFor(e =>  e.state.StateCode, htmlAttributes: new { @class = "form-control", @onkeypress = "AllowAlpha()" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.state.StateCode, "", new { @class = "field-validation-error" })

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.state.GSTStateCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.state.GSTStateCode, htmlAttributes: new { @class = "form-control", @Maxlength = "2", @id= "txt_gstcode" })

                                @Html.ValidationMessageFor(e => e.state.GSTStateCode, "", new { @class = "field-validation-error" ,@id= "txt_gstcode" })
                                <br style="line-height:1em" />
                                <span class="txt_gstcode field-validation-error" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label>
                                        @Html.LabelFor(e => e.state.IsUnionTerritory, "Is Union Territory")
                                        @Html.CheckBoxFor(e => e.state.IsUnionTerritory, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label style="font-size:14px !important">
                                        @Html.LabelFor(e => e.state.IsActive, "Is Active")
                                        @Html.CheckBoxFor(e => e.state.IsActive, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-center" style="margin:10px;">

                            @if (Model.state.Id != 0)
                            {
                                <button type="submit" id="btn_update" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="submit" id="btn_add" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="btn_reset">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</form>



@section scripts{
    <script src="~/EventManagement/js/utility.js"></script>
    <script>
        var valid = false;
        var valid2 = false;
        $(document).ready(function () {
            $(".chart-loader").attr("style", "display:none");
            $(".select2-container--material").select2({
                theme: "material",
            });
            $("#div_form").show();

            $("#btn_reset").click(function () {
                $("#div_form").trigger("reset");
            });
            $("#btn_add").click(function () {
                if (valid && $("form").valid()) {
                    SaveData();
                }
            });
            $("#btn_update").click(function () {
                if ($("form").valid() ) {
                    SaveData();
                }
            });
          

            $("#txt_name").on("change", function () {
                getAjax("@Url.Action("IsStateExists")", { name: $("#txt_name").val() }, function (result) {

                switch (result.status) {
                    case "F":
                        valid = false;
                        $(".txt_name").empty().text(result.message);
                        $(".txt_name").show();
                        break;
                    case "S":
                        valid = true;
                        $(".txt_name").hide();
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
            });

            $("#txt_gstcode").on("change", function () {
                getAjax("@Url.Action("IsgstcodeExists")", { name: $("#txt_gstcode").val() }, function (result) {

                switch (result.status) {
                    case "F":
                        valid2 = false;
                        $(".txt_gstcode").empty().text(result.message);
                        $(".txt_gstcode").show();
                        break;
                    case "S":
                        valid2 = true;
                        $(".txt_gstcode").hide();
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
            });

            function SaveData() {
            var object = $("form").serializeArray();
            var json = {};
            $.each(object, function () {
                if (json[this.name] == undefined) {
                    json[this.name] = this.value;
                }
            });
             getAjax("@Url.Action("AddUpdate")", json,
                function (result) {
                    if (result.status == "F") {
                        $("#notification").empty().text(result.message);
                        $("#notification_modal").modal("show").on(alignModal);
                        setTimeout(function () {
                            $('#notification_modal').slideUp("slow").modal("hide");
                        }, 3000);
                        Message = null;
                    }else {
                        window.localStorage.setItem("Message", result.message);
                        window.location.href = "@Url.Action("SummaryView")"
                    }
                }, function (request, error) {
                    alert(" Can't do because: " + error);
            })

            function alignModal() {
                var modalDialog = $(this).find(".modal-dialog");
                modalDialog.css("margin-top", Math.max(0, ($(window).height() - modalDialog.height()) / 2));
            }
            }

    });

    </script>
    <Partial name="_ValidationScriptsPartial.cshtml" />

}
