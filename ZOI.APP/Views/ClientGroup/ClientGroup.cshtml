@model ZOI.BAL.ViewModels.ClientGroupViewModel
@{
    if (Model.clientGroup.Id != 0)
    {
        ViewData["Title"] = "Update Client Group";
    }
    else
    {

        ViewData["Title"] = "Add Client Group";
    }
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("Index");
}

<style>
    .form-group label {
        font-size: 13px;
        line-height: 1.42857;
        color: #758396;
        font-weight: 600;
        margin-left: 0%;
        width: auto !important;
    }

    .select2-container {
        width: 100%;
    }

    .select2-container--material .select2-selection--single {
        background-color: transparent;
        border: none;
        border-bottom: 1px solid #ced4da !important;
        border-radius: 0;
        box-shadow: none;
        box-sizing: content-box;
        height: auto;
        margin: 0;
        outline: none;
        padding: 8px 0 5px 0;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
</style>

<form>
    <div id="div_form" class="container-fluid" style="display: none;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.GroupName)   <span style="color:red">*</span>
                                @if (Model.clientGroup.Id != 0)
                                {
                                    @Html.TextBoxFor(e => e.clientGroup.GroupName, new { @class = "form-control", @id = "txt_group_name", @readonly = true })
                                }
                                else
                                {
                                    @Html.TextBoxFor(e => e.clientGroup.GroupName, new { @class = "form-control", @id = "txt_group_name" })
                                }
                                @Html.ValidationMessageFor(e => e.clientGroup.GroupName)
                                @Html.HiddenFor(e => e.clientGroup.Id, htmlAttributes: new { @class = "form-control" })
                                <span class="txt_name" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.AddressLine1) <span style="color:red">*</span>
                                @Html.TextAreaFor(e => e.clientGroup.AddressLine1, new { @class = "form-control", @id = "txt_address_line1" })
                                @Html.ValidationMessageFor(e => e.clientGroup.AddressLine1)
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.AddressLine2)
                                @Html.TextAreaFor(e => e.clientGroup.AddressLine2, new { @class = "form-control", @id = "txt_address_line2" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.CountryID) <span style="color:red">*</span>
                                @Html.DropDownListFor(e => e.clientGroup.CountryID, Model.CountryList, "--Select--", new { @class = "form-control select2-container--material", @id = "ddl_countryId", @style = "width:100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.clientGroup.CountryID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.StateID) <span style="color:red">*</span>
                                @Html.DropDownListFor(e => e.clientGroup.StateID, Model.StateList, "--Select--", htmlAttributes: new { @class = "form-control select2-container--material", @id = "ddl_stateId", @style = "width:100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.clientGroup.StateID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.CityID) <span style="color:red">*</span>
                                @Html.DropDownListFor(e => e.clientGroup.CityID, Model.CityList, "--Select--", new { @class = "form-control select2-container--material", @id = "ddl_cityId", @style = "width:100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.clientGroup.CityID, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.LabelFor(e => e.clientGroup.Pincode) <span style="color:red">*</span>
                                @Html.TextBoxFor(e => e.clientGroup.Pincode, new { @class = "form-control", @id = "txt_pincode" })
                                @Html.ValidationMessageFor(e => e.clientGroup.Pincode, "", new { @style = "margin-top: -6px !important;margin-bottom:5px !important" })
                            </div>
                        </div>
                        @*<div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                                <div class="form-group is-empty">
                                    @Html.LabelFor(e => e.clientGroup.Longitude)
                                    @Html.TextBoxFor(e => e.clientGroup.Longitude, new { @class = "form-control", @id = "txt_longitude" })
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12 ">
                                <div class="form-group is-empty">
                                    @Html.LabelFor(e => e.clientGroup.Latitude)
                                    @Html.TextBoxFor(e => e.clientGroup.Latitude, new { @class = "form-control", @id = "txt_latitude" })
                                </div>
                            </div>*@
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="input-group">
                                <div class="checkbox">
                                    <label>
                                        @Html.DisplayNameFor(e => e.clientGroup.IsActive)
                                        @Html.CheckBoxFor(e => e.clientGroup.IsActive, htmlAttributes: new { @class = "checkbox" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="text-center" style="margin:10px;">

                            @if (Model.clientGroup.Id != 0)
                            {
                                <button type="button" id="" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="" onclick="Reset()">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts{
    <script>
        var valid = true;
        $(document).ready(function () {
            $(".chart-loader").attr("style", "display:none");
            $("#div_form").show();
        });

        //  Fill the state dropdown
        $(document).on("change", "#ddl_countryId", function () {
        var countryid = $("#ddl_countryId").val();
            getAjax('@Url.Action("FillStates")', { countryID: countryid }, function (response, ct) {
                $("#ddl_cityId").empty().append('<option value="">--Select--</option>');
                if (response != null) {
                    $("#ddl_stateId").html('<option value="">--Select--</option>');
                    $.each(response.clientGroup.data.data, function (i, item) {
                        $("#ddl_stateId").append($("<option></option>").val(item.value).html(item.text));
                    });
                }
            });
        });

         //  Fill the City dropdown
        $(document).on("change", "#ddl_stateId", function () {
                var stateId = $("#ddl_stateId").val();
                getAjax('@Url.Action("FillCities")', { stateID: stateId}, function (response, ct) {
                    if (response != null) {
                        $("#ddl_cityId").html('<option value="">--Select--</option>');
                        $.each(response.clientGroup.data.data, function (i, item) {
                            $("#ddl_cityId").append($("<option></option>").val(item.value).html(item.text));
                        });
                    }
                });
            });

        //  Check the Group name exsits or not.
        $("#txt_group_name").on("change", function () {
            getAjax("@Url.Action("IsExstis")", { name: $("#txt_group_name").val() }, function (result) {

                switch (result.status) {
                    case "F":
                        valid = false;
                        $(".txt_name").empty().text(result.message);
                        $(".txt_name").show();
                        break;
                    case "S":
                        valid = true;
                        $(".txt_name").hide();
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
        });



        // Save data functionality.
        function SaveData() {
             // If the form was valid and the Fields was Unique it move to the  add  functionality
            if ($("form").valid()) {
                var object = $("form").serializeArray();
                var json = {};
                $.each(object, function () {
                    if (json[this.name] == undefined) {
                        json[this.name] = this.value;
                    }
                });
                postAjax("@Url.Action("AddUpdate")", json,
                    function (result) {
                        if (result.status == "S") {
                            window.localStorage.clientGroup.setItem("Message", result.message);
                            window.location.href = "@Url.Action("Index")";
                        } else {
                            show_notification(result.message);
                        }
                    }, function (request, error) {
                        show_notification("Something went wrong");
                    });
                }
            //Else show th error.
            else {
                show_notification("Form was not valid");
            }
        }


    </script>
}
