@model ZOI.BAL.ViewModels.PincodeViewModel
@using ZOI.BAL.Utilites
@{
    if (Model.pincode.ID == 0)
    {
        ViewData["Title"] = "Add Pincode";
    }
    else
    {
        ViewData["Title"] = "Update Pincode";
    }
    ViewData["ActionTitle"] = "Back";
    ViewData["ActionIcon"] = "zmdi-arrow-back";
    ViewData["ActionId"] = "btn_back";
    ViewData["URL"] = Url.Action("SummaryView");

}

<form>
    <div id="div_form" class="container-fluid" style="display: none ;margin-top: 40px;">
        <div class="content-body">
            <div class="card p-t-20">
                <div class="card-body">
                   <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                 
                    @if (Model.pincode.PinCode != 0)
                    {   <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                                <div class="form-group is-empty">
                                    @Html.DisplayNameFor(e => e.pincode.PinCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                    @Html.TextBoxFor(e => e.pincode.PinCode, htmlAttributes: new { @class = "form-control",  @readonly = true })
                                    @Html.HiddenFor(e => e.pincode.ID, htmlAttributes: new { @id = "hdn_id" })
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                                @Html.DisplayNameFor(e => e.pincode.CountryId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.pincode.CountryName, htmlAttributes: new { @class = "form-control", @readonly = true })
                                @Html.HiddenFor(e => e.pincode.CountryId)                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                                <div class="form-group is-empty">
                                    @Html.DisplayNameFor(e => e.pincode.StateId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                    @Html.TextBoxFor(e => e.pincode.StateName, htmlAttributes: new { @class = "form-control", @readonly = true })
                                    @Html.HiddenFor(e => e.pincode.StateId)
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                    <div class="row">

                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.pincode.PinCode)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.pincode.PinCode, htmlAttributes: new { @class = "form-control", @id = "txt_pincode", @onkeypress = "Numeric(event)", @Maxlength = "6", @Minlength = "6" })
                                @Html.ValidationMessageFor(e => e.pincode.PinCode, "", new { @class = "field-validation-error" })
                                <span class="txt_name field-validation-error" style="color:red"></span>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.pincode.CountryId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.pincode.CountryId, Model.CountryList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_country", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.pincode.CountryId, "", new { @style = "margin-top: 0px !important;" })

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 ">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.pincode.StateId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.pincode.StateId, Model.StateList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_state", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.pincode.StateId, "", new { @style = "margin-top: 0px !important;" })


                            </div>
                        </div>

                    </div>
                    }
                    
                <div class="row">
                    
                    @if (Model.pincode.PinCode != 0)
                    {
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.pincode.CityId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.TextBoxFor(e => e.pincode.CityName, htmlAttributes: new { @class = "form-control", @id = "txt_dpcode", @readonly = true })
                                @Html.HiddenFor(e => e.pincode.CityId)
                            </div>
                        </div> 
                    }
                    else
                    {
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                @Html.DisplayNameFor(e => e.pincode.CityId)<span style="color: red"><strong>&nbsp;*</strong></span>
                                @Html.DropDownListFor(e => e.pincode.CityId, Model.CityList ?? new List<SelectListItem>(), Constants.Select, new { @id = "ddl_city", @class = "form-control select2-container--material", @style = "width: 100%" })
                                <br style="line-height:1em" />
                                @Html.ValidationMessageFor(e => e.pincode.CityId, "", new { @style = "margin-top: 0px !important;" })
                            </div>
                        </div>
                    }
                    
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group is-empty">
                                <div class="input-group">
                                    <div class="checkbox">
                                        <label style="font-size:14px !important">
                                            @Html.LabelFor(e => e.pincode.IsActive)
                                            @Html.CheckBoxFor(e => e.pincode.IsActive, htmlAttributes: new { @class = "checkbox" })
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                


                    <div class="row">
                        <div class="text-center" style="margin:10px;">
                            @if (Model.pincode.ID != 0)
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success">
                                    Update
                                </button>
                            }
                            else
                            {
                                <button type="button" id="" onclick="SaveData()" class="btn btn-success ">
                                    Add
                                </button>
                                <button type="button" class="btn btn-warning" id="btn_reset">
                                    Reset
                                </button>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</form>
@section scripts{

    <script>
        var valid = true;
        $(document).ready(function () {
                var option = "<option value=''>--Select--</option>";
            $(".chart-loader").attr("style", "display:none");
            $(".select2-container--material").select2({
                theme: "material",
            });
            $("#div_form").show();

            $("#ddl_country").on("change", function () {
                getAjax("@Url.Action("GetStateList")", { CountryID: $(this).val() }, function (result) {
                    console.log(result);
                    $.each(result, function (index, val) {
                        console.log(val.value);
                        console.log(val.text);
                        option += "<option value='" + val.value + "'>" + val.text + " </option>"
                    });
                    $("#ddl_state").empty().append(option);
                    $("#ddl_city").empty();
                    option = null;
                }, function () {})
            })

            $("#ddl_state").on("change", function () {
                getAjax("@Url.Action("GetCityList")", { StateID: $(this).val() }, function (result) {
                    console.log(result);


                    $.each(result, function (index, val) {
                        console.log(val.value);
                        console.log(val.text);
                                option += "<option value='" + val.value + "'>" + val.text +" </option>"
                            });
                            $("#ddl_city").empty().append(option);
                            option = null;
                }, function () {})
            })

            $("#div_form").show();

        $("#btn_reset").click(function () {
            $("#div_form").trigger("reset");
        });

            $("#txt_pincode").on("change", function () {
            getAjax("@Url.Action("IsExstis")", { name: $("#txt_pincode").val(), ID: $("#hdn_id").val()}, function (result) {
                switch (result.status) {
                    case "F":
                        $(".txt_name").empty().text("The Pincode already exsits.");
                        $(".txt_name").show();
                        valid = false;
                        break;
                    case "S":
                        $(".txt_name").hide();
                        valid = true;
                        break;
                    default:
                }
            }, function (request, error) {
                alert(" Can't do because: " + error);
            })
        });
        });

        function SaveData() {
                if ($("form").valid() && valid) {
                    $(".chart-loader").show();
                    $("#div_form").hide();

                    var object = $("form").serializeArray();
                    var json = {};
                    $.each(object, function () {
                        if (json[this.name] == undefined) {
                            json[this.name] = this.value;
                        }
                    });
                    getAjax("@Url.Action("AddUpdate")", json,
                        function (result) {
                    switch (result.status) {
                        case "F":
                            $("#notification").empty().text(result.message);
                            $("#notification_modal").modal("show").on(alignModal);
                            setTimeout(function () {
                                $('#notification_modal').slideUp("slow").modal("hide");
                            }, 3000);
                            Message = null;
                            $(".chart-loader").hide();
                            $("#div_form").show();
                            break;
                        case "S":
                            window.localStorage.setItem("Message", result.message);
                            window.location.href = "@Url.Action("SummaryView")"
                            break;
                        default:
                    }
                }, function (request, error) {
                            alert(" Can't do because: " + error);
                    })
                }
        }

        function alignModal() {
            var modalDialog = $(this).find(".modal-dialog");
            modalDialog.css("margin-top", Math.max(0, ($(window).height() - modalDialog.height()) / 2));
        }

    </script>
    <Partial name="_ValidationScriptsPartial.cshtml" />
}
